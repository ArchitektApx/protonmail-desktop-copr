name: Build Protonmail Desktop App
on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps: 
      - uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Check Proton Inbox Desktop Version
        id: inbox_desktop_version
        run: |
          INBOX_DESKTOP_VERSION=$(cat WebClients/applications/inbox-desktop/package.json | jq -r '.version')
          
          git fetch --tags
          LOCAL_VER=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          
          INBOX_NEEDS_UPDATE=false
          if [ "$LOCAL_VER" != "$INBOX_DESKTOP_VERSION" ]; then
            INBOX_NEEDS_UPDATE=true
          fi

          echo "INBOX_DESKTOP_VERSION=${INBOX_DESKTOP_VERSION}" >> $GITHUB_ENV
          echo "INBOX_DESKTOP_VERSION=${INBOX_DESKTOP_VERSION}" >> $GITHUB_OUTPUT
          echo "INBOX_NEEDS_UPDATE=${INBOX_NEEDS_UPDATE}" >> $GITHUB_OUTPUT
      
      - name: Setup git bot
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Install Dependencies
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm dpkg-dev \
            debhelper fakeroot libc6-dev-arm64-cross \
            linux-libc-dev-arm64-cross g++-aarch64-linux-gnu
      
      - name: Setup Node.js
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'yarn'
          cache-dependency-path: WebClients/yarn.lock

      - name: Apply Patches
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        run: |
          # apply all patches in the ./patches directory
          for patch in $(ls patches/*.patch); do
            patch -p1 < $patch
          done
          
      - name: Install Yarn
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        run: |
          cd WebClients
          npm install -g yarn
          yarn install --no-immutable
          
      - name: Build inbox-desktop
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        run: |
          cd WebClients
          yarn workspace proton-inbox-desktop make --arch=arm64,x64

      - name: Collect Outputs
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        id: bundle
        run: |
          mkdir -p dist 
          find WebClients/applications/inbox-desktop/out/make/deb -type f -name "*.deb" -exec cp {} dist/ \;
          find WebClients/applications/inbox-desktop/out/make/rpm -type f -name "*.rpm" -exec cp {} dist/ \;
          find WebClients/applications/inbox-desktop/out/make/zip -type f -name "*.zip" -exec cp {} dist/ \;

      - name: Create Release Markdown
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        id: release
        run: |
          touch release.md
          echo "# Proton Mail Desktop ${INBOX_DESKTOP_VERSION}" >> release.md

          # get sha256sum of all files and format as markdown table (match until end of line to handle spaces in filenames)
          echo "## Checksums" >> release.md
          echo "| File | SHA256 |" >> release.md
          echo "| --- | --- |" >> release.md
          cd dist
          sha256sum * | sed -E 's/(.*)  (.*)/| \2 | \1 |/' >> ../release.md
      
      - name: Publish Release
        if: steps.inbox_desktop_version.outputs.INBOX_NEEDS_UPDATE == 'true'
        uses: ncipollo/release-action@v1.14.0
        with: 
          artifacts: dist/*
          tag: ${{ steps.inbox_desktop_version.outputs.INBOX_DESKTOP_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: ${{ github.workspace }}/release.md
          makeLatest: true
          skipIfReleaseExists: true    